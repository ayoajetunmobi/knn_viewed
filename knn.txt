import pandas as pd

from sklearn import model_selection

import math

import numpy as np

df = pd.read_csv('iris.data')

# sorting dataframe using a column from descending order.....

z = df.sort_values('Sepal.Length',ascending= False)

print(z.head(n=3))

     Sepal.Length  Sepal.Width  Petal.Length  Petal.Width         Species
131           7.9          3.8           6.4          2.0  Iris-virginica
135           7.7          3.0           6.1          2.3  Iris-virginica
122           7.7          2.8           6.7          2.0  Iris-virginica

x=df

import math

y=df.Species

​

​

x_train,x_test,y_train,y_test= model_selection.train_test_split(x,y,test_size=0.3,random_state=54)

x_test.head()

	Sepal.Length 	Sepal.Width 	Petal.Length 	Petal.Width 	Species
0 	5.1 	3.5 	1.4 	0.2 	Iris-setosa
45 	4.8 	3.0 	1.4 	0.3 	Iris-setosa
91 	6.1 	3.0 	4.6 	1.4 	Iris-versicolor
103 	6.3 	2.9 	5.6 	1.8 	Iris-virginica
94 	5.6 	2.7 	4.2 	1.3 	Iris-versicolor

#the knn model used to train the algorithm

c = len(x_train)

def knn_algo(m,n,o,p,k):

    for i in range(c):

            t1 =(m-x_train['Sepal.Length'])**2 + (n-x_train['Sepal.Width'])**2 + (o-x_train['Petal.Length'])**2 + (p-x_train['Petal.Width'])**2 # eucledean distance

    total = pd.Series(t1,name='dist')

    merge = pd.concat([x_train,total],axis=1,ignore_index=False)

    pred = merge.sort_values('dist')

    print(pred.head(k))

knn_algo(6.3 ,2.9 ,5.6 ,1.8,5)

     Sepal.Length  Sepal.Width  Petal.Length  Petal.Width         Species  \
137           6.4          3.1           5.5          1.8  Iris-virginica   
111           6.4          2.7           5.3          1.9  Iris-virginica   
132           6.4          2.8           5.6          2.2  Iris-virginica   
147           6.5          3.0           5.2          2.0  Iris-virginica   
104           6.5          3.0           5.8          2.2  Iris-virginica   

     dist  
137  0.06  
111  0.15  
132  0.18  
147  0.25  
104  0.25  

​